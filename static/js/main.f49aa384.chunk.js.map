{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["spotifyApi","SpotifyWebApi","App","token","getHashParams","access_token","setAccessToken","state","loggedIn","color1","color2","color3","color4","color5","gradient","nowPlaying","name","albumArt","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlayingTrack","then","response","console","log","currTrack","item","currURI","uri","getAudioFeaturesForTrack","response1","acousticness","danceability","liveness","valence","energy","randomColor","Math","floor","toString","toUpperCase","setState","album","images","url","curr","document","getElementById","style","background","color","backgroundColor","getMyTopTracks","items","onRejected","alert","query","searchTracks","this","className","id","onClick","getNowPlaying","src","height","class","href","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f49aa384.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      color1: '',\n      color2: '',\n      color3: '',\n      color4: '',\n      color5: '',\n      gradient: '',\n      nowPlaying: { name: '', albumArt: '' }\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlayingTrack()\n      .then((response) => {\n        console.log(response);\n        var currTrack  = response.item;\n        console.log(currTrack);\n        var currURI = currTrack.uri;\n        console.log(currURI);\n        currURI = currURI.substring(14);\n        console.log(currURI);\n        spotifyApi.getAudioFeaturesForTrack(currURI).then((response1) => {\n          console.log(response1);\n          var acousticness = response1.acousticness;\n          var danceability = response1.danceability;\n          var liveness = response1.liveness;\n          var valence = response1.valence;\n          var energy = response1.energy;\n          var randomColor = 16777215;\n\n          acousticness = acousticness < 0.1? acousticness * 100: acousticness;\n          var color1 = '#'+Math.floor(acousticness*randomColor).toString(16).toUpperCase();\n          var color2 = '#'+Math.floor(liveness*randomColor).toString(16).toUpperCase();\n          var color3 = '#'+Math.floor(danceability*randomColor).toString(16).toUpperCase();\n          var color4 = '#'+Math.floor(valence*randomColor).toString(16).toUpperCase();\n          var color5 = '#'+Math.floor(energy*randomColor).toString(16).toUpperCase();\n          this.setState({\n            nowPlaying: { \n                name: 'Now playing: ' + response.item.name, \n                albumArt: response.item.album.images[0].url\n              },\n              color1: color1,\n              color2: color2,\n              color3: color3,\n              color4: color4,\n              color5: color5,\n          });\n          var gradient;\n          var curr = danceability;\n          if(curr < 0.1){\n              gradient = \"radial-gradient(farthest-side at 5px 5px,\"+ this.state.color1 + \",\" + this.state.color5 + \",\" + this.state.color3+ \")\"\n          }else if(curr < 0.3){\n              gradient = \"radial-gradient(\"+ this.state.color2 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          }else if(curr < 0.5){\n            gradient = \"linear-gradient(45deg,\"+ this.state.color2 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          }else if(curr < .62){\n            gradient = \"linear-gradient(60deg,\"+ this.state.color1 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          }else if(curr < .75){\n              gradient = \"linear-gradient(45deg,\"+ this.state.color1 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          } else{\n              gradient = \"radial-gradient(farthest-side at 60px 40px,\"+ this.state.color3 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          }\n          console.log(gradient);\n          console.log(color1); \n          document.getElementById('gradient').style.background = gradient;\n          document.getElementById('color1').style.color = color1;\n          document.getElementById('circle1').style.backgroundColor = color1;\n          document.getElementById('color2').style.color = color2;\n          document.getElementById('circle2').style.backgroundColor = color2;\n          document.getElementById('color3').style.color = color3;\n          document.getElementById('circle3').style.backgroundColor = color3;\n          document.getElementById('color4').style.color = color4;\n          document.getElementById('circle4').style.backgroundColor = color4;\n          document.getElementById('color5').style.color = color5;\n          document.getElementById('circle5').style.backgroundColor = color5;\n        })\n      })\n  }\n\n  getTopTracks(){\n    spotifyApi.getMyTopTracks()\n      .then((response) => {\n        console.log(response.items);\n      }, (onRejected) => {\n        alert(\"gathering tracks failed\");\n      })\n  }\n  searchTrack(query){\n    spotifyApi.searchTracks(query).then(\n      (response) =>{\n     console.log(\"hello\")\n    }, (onRejected) => {\n      alert(\"search failed\");\n    })\n  }\n  render() {\n    if(this.state.loggedIn){\n      return(\n      <div className=\"App\">\n        <h1>welcome to mood ring</h1>\n        <div className='center'>\n          <p> mood ring creates a color profile of the \n            song that you are currently listening to on spotify. \n          if you want to use mood ring, then start playing a song in the web player or on the app on spotify</p>\n        </div>\n        { this.state.loggedIn &&\n          <button id='now-btn' onClick={() => this.getNowPlaying()}>\n            check your mood\n          </button>\n        }\n        <div>\n            <p> { this.state.nowPlaying.name } </p>\n          </div>\n          <div>\n            <img id='albumsrc' src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n          </div>\n        <div className ='color' id='gradient' > \n        </div>\n\n        <div className =\"colorPalette\">\n        <table>\n          <td>  \n              <span class=\"dot\" id='circle1'></span>\n              <h2> <span id='color1' > {this.state.color1} </span> </h2>\n            </td>\n            <td>  \n              <span class=\"dot\" id='circle2'></span>\n              <h2> <span id='color2' > {this.state.color2} </span> </h2>\n            </td>\n            <td>  \n              <span class=\"dot\" id='circle3'></span>\n              <h2> <span id='color3' > {this.state.color3} </span> </h2>\n            </td>\n            <td>  \n              <span class=\"dot\" id='circle4'></span>\n              <h2> <span id='color4' > {this.state.color4} </span> </h2>\n            </td>\n            <td>  \n              <span class=\"dot\" id='circle5'></span>\n              <h2> <span id='color5' > {this.state.color5} </span> </h2>\n            </td>\n\n          </table>\n        </div>\n      </div>);\n   }else{\n     return(\n      <div className=\"App\">\n        <h1>welcome to mood ring</h1>\n        <div className='center'>\n          <p> mood ring creates a color profile of the song that \n          you are currently listening to on spotify. if you want to use \n          mood ring, then start playing a song in the web player on spotify</p>\n        </div>\n        <div class =\"log-in-btn\">\n        <a id=\"elementId\" href=\"http://localhost:8888\" >log in</a>\n        </div>\n      </div>);\n   }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}