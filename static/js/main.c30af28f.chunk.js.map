{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["spotifyApi","SpotifyWebApi","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","App","token","getHashParams","access_token","setAccessToken","state","loggedIn","color1","color2","color3","color4","color5","gradient","nowPlaying","name","albumArt","e","hashParams","r","q","exec","getMyCurrentPlayingTrack","then","response","console","log","currTrack","currURI","uri","getAudioFeaturesForTrack","response1","acousticness","danceability","liveness","valence","energy","randomColor","Math","floor","toString","toUpperCase","setState","album","images","url","curr","document","getElementById","style","background","color","backgroundColor","getMyTopTracks","items","onRejected","alert","query","searchTracks","_token","this","className","id","onClick","getNowPlaying","src","height","class","href","join","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mRAGMA,EAAa,IAAIC,IAKjBC,EAAS,CACb,8BACA,4BAGIC,EAAOC,OAAOC,SAASF,KAC1BG,UAAU,GACVC,MAAM,KACNC,QAAO,SAASC,EAASC,GACxB,GAAIA,EAAM,CACR,IAAIC,EAAQD,EAAKH,MAAM,KACvBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,IACN,IAyMUI,E,kDAtMb,aAAc,IAAD,sBAEX,IACMC,GAFN,gBACoBC,gBACCC,aAHV,OAIPF,GACFd,EAAWiB,eAAeH,GAE5B,EAAKI,MAAQ,CACXC,WAAUL,EACVM,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,WAAY,CAAEC,KAAM,GAAIC,SAAU,KAfzB,E,iDAkBb,WACE,IACIC,EADAC,EAAa,GACVC,EAAI,uBACPC,EAAI5B,OAAOC,SAASF,KAAKG,UAAU,GAEvC,IADAuB,EAAIE,EAAEE,KAAKD,GACJH,GACJC,EAAWD,EAAE,IAAMjB,mBAAmBiB,EAAE,IACxCA,EAAIE,EAAEE,KAAKD,GAEd,OAAOF,I,2BAET,WAAgB,IAAD,OACb9B,EAAWkC,2BACRC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,IAAIG,EAAaH,EAAS1B,KAC1B2B,QAAQC,IAAIC,GACZ,IAAIC,EAAUD,EAAUE,IACxBJ,QAAQC,IAAIE,GACZA,EAAUA,EAAQlC,UAAU,IAC5B+B,QAAQC,IAAIE,GACZxC,EAAW0C,yBAAyBF,GAASL,MAAK,SAACQ,GACjDN,QAAQC,IAAIK,GACZ,IAAIC,EAAeD,EAAUC,aACzBC,EAAeF,EAAUE,aACzBC,EAAWH,EAAUG,SACrBC,EAAUJ,EAAUI,QACpBC,EAASL,EAAUK,OACnBC,EAAc,SAElBL,EAAeA,EAAe,GAAoB,IAAfA,EAAoBA,EACvD,IAgBInB,EAhBAL,EAAS,IAAI8B,KAAKC,MAAMP,EAAaK,GAAaG,SAAS,IAAIC,cAC/DhC,EAAS,IAAI6B,KAAKC,MAAML,EAASG,GAAaG,SAAS,IAAIC,cAC3D/B,EAAS,IAAI4B,KAAKC,MAAMN,EAAaI,GAAaG,SAAS,IAAIC,cAC/D9B,EAAS,IAAI2B,KAAKC,MAAMJ,EAAQE,GAAaG,SAAS,IAAIC,cAC1D7B,EAAS,IAAI0B,KAAKC,MAAMH,EAAOC,GAAaG,SAAS,IAAIC,cAC7D,EAAKC,SAAS,CACZ5B,WAAY,CACRC,KAAM,gBAAkBS,EAAS1B,KAAKiB,KACtCC,SAAUQ,EAAS1B,KAAK6C,MAAMC,OAAO,GAAGC,KAE1CrC,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,OAAQA,IAGZ,IAAIkC,EAAOb,EAEPpB,EADDiC,EAAO,GACK,4CAA6C,EAAKxC,MAAME,OAAS,IAAM,EAAKF,MAAMM,OAAS,IAAM,EAAKN,MAAMI,OAAQ,IAC1HoC,EAAO,GACD,mBAAoB,EAAKxC,MAAMG,OAAS,IAAM,EAAKH,MAAMK,OAAS,IAAM,EAAKL,MAAMI,OAAQ,IACjGoC,EAAO,GACH,yBAA0B,EAAKxC,MAAMG,OAAS,IAAM,EAAKH,MAAMK,OAAS,IAAM,EAAKL,MAAMI,OAAQ,IACrGoC,EAAO,IACH,yBAA0B,EAAKxC,MAAME,OAAS,IAAM,EAAKF,MAAMK,OAAS,IAAM,EAAKL,MAAMI,OAAQ,IACrGoC,EAAO,IACD,yBAA0B,EAAKxC,MAAME,OAAS,IAAM,EAAKF,MAAMK,OAAS,IAAM,EAAKL,MAAMI,OAAQ,IAEjG,8CAA+C,EAAKJ,MAAMI,OAAS,IAAM,EAAKJ,MAAMK,OAAS,IAAM,EAAKL,MAAMI,OAAQ,IAErIe,QAAQC,IAAIb,GACZY,QAAQC,IAAIlB,GACZuC,SAASC,eAAe,YAAYC,MAAMC,WAAarC,EACvDkC,SAASC,eAAe,UAAUC,MAAME,MAAQ3C,EAChDuC,SAASC,eAAe,WAAWC,MAAMG,gBAAkB5C,EAC3DuC,SAASC,eAAe,UAAUC,MAAME,MAAQ1C,EAChDsC,SAASC,eAAe,WAAWC,MAAMG,gBAAkB3C,EAC3DsC,SAASC,eAAe,UAAUC,MAAME,MAAQzC,EAChDqC,SAASC,eAAe,WAAWC,MAAMG,gBAAkB1C,EAC3DqC,SAASC,eAAe,UAAUC,MAAME,MAAQxC,EAChDoC,SAASC,eAAe,WAAWC,MAAMG,gBAAkBzC,EAC3DoC,SAASC,eAAe,UAAUC,MAAME,MAAQvC,EAChDmC,SAASC,eAAe,WAAWC,MAAMG,gBAAkBxC,U,0BAKnE,WACExB,EAAWiE,iBACR9B,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAS8B,UACpB,SAACC,GACFC,MAAM,gC,yBAGZ,SAAYC,GACVrE,EAAWsE,aAAaD,GAAOlC,MAC7B,SAACC,GACFC,QAAQC,IAAI,YACV,SAAC6B,GACFC,MAAM,sB,+BAGV,WAEE,IAAIG,EAASpE,EAAKa,aACduD,GAEFC,KAAKlB,SAAS,CACZxC,MAAOyD,M,oBAIb,WAAU,IAAD,OACP,OAAGC,KAAKtD,MAAMC,SAEZ,sBAAKsD,UAAU,MAAf,UACE,sDACA,qBAAKA,UAAU,SAAf,SACE,oOAIAD,KAAKtD,MAAMC,UACX,wBAAQuD,GAAG,UAAUC,QAAS,kBAAM,EAAKC,iBAAzC,6BAIF,8BACI,kCAAMJ,KAAKtD,MAAMQ,WAAWC,KAA5B,SAEF,8BACE,qBAAK+C,GAAG,WAAWG,IAAKL,KAAKtD,MAAMQ,WAAWE,SAAUiC,MAAO,CAAEiB,OAAQ,SAE7E,qBAAKL,UAAW,QAAQC,GAAG,aAG3B,qBAAKD,UAAW,eAAhB,SACA,kCACE,+BACI,sBAAMM,MAAM,MAAML,GAAG,YACrB,mCAAK,uBAAMA,GAAG,SAAT,cAAqBF,KAAKtD,MAAME,OAAhC,OAAL,UAEF,+BACE,sBAAM2D,MAAM,MAAML,GAAG,YACrB,mCAAK,uBAAMA,GAAG,SAAT,cAAqBF,KAAKtD,MAAMG,OAAhC,OAAL,UAEF,+BACE,sBAAM0D,MAAM,MAAML,GAAG,YACrB,mCAAK,uBAAMA,GAAG,SAAT,cAAqBF,KAAKtD,MAAMI,OAAhC,OAAL,UAEF,+BACE,sBAAMyD,MAAM,MAAML,GAAG,YACrB,mCAAK,uBAAMA,GAAG,SAAT,cAAqBF,KAAKtD,MAAMK,OAAhC,OAAL,UAEF,+BACE,sBAAMwD,MAAM,MAAML,GAAG,YACrB,mCAAK,uBAAMA,GAAG,SAAT,cAAqBF,KAAKtD,MAAMM,OAAhC,OAAL,kBAQR,sBAAKiD,UAAU,MAAf,UACE,sDACA,qBAAKA,UAAU,SAAf,SACE,uNAIFD,KAAKtD,MAAMJ,OACV,mBACA2D,UAAU,SAASC,GAAG,SACtBM,KAAI,UA9Me,yCA8Mf,sBA5MI,mCA4MJ,yBA3MO,sCA2MP,kBAA6E9E,EAAO+E,KACtF,OADE,yCAFJ,qC,GAxLSC,aCZHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BuB,M","file":"static/js/main.c30af28f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"9bec859fe0044a70879a7381120c5785\";\nconst redirectUri = \"http://mhblatch.github.io/mood-ring\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      color1: '',\n      color2: '',\n      color3: '',\n      color4: '',\n      color5: '',\n      gradient: '',\n      nowPlaying: { name: '', albumArt: '' }\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlayingTrack()\n      .then((response) => {\n        console.log(response);\n        var currTrack  = response.item;\n        console.log(currTrack);\n        var currURI = currTrack.uri;\n        console.log(currURI);\n        currURI = currURI.substring(14);\n        console.log(currURI);\n        spotifyApi.getAudioFeaturesForTrack(currURI).then((response1) => {\n          console.log(response1);\n          var acousticness = response1.acousticness;\n          var danceability = response1.danceability;\n          var liveness = response1.liveness;\n          var valence = response1.valence;\n          var energy = response1.energy;\n          var randomColor = 16777215;\n\n          acousticness = acousticness < 0.1? acousticness * 100: acousticness;\n          var color1 = '#'+Math.floor(acousticness*randomColor).toString(16).toUpperCase();\n          var color2 = '#'+Math.floor(liveness*randomColor).toString(16).toUpperCase();\n          var color3 = '#'+Math.floor(danceability*randomColor).toString(16).toUpperCase();\n          var color4 = '#'+Math.floor(valence*randomColor).toString(16).toUpperCase();\n          var color5 = '#'+Math.floor(energy*randomColor).toString(16).toUpperCase();\n          this.setState({\n            nowPlaying: { \n                name: 'Now playing: ' + response.item.name, \n                albumArt: response.item.album.images[0].url\n              },\n              color1: color1,\n              color2: color2,\n              color3: color3,\n              color4: color4,\n              color5: color5,\n          });\n          var gradient;\n          var curr = danceability;\n          if(curr < 0.1){\n              gradient = \"radial-gradient(farthest-side at 5px 5px,\"+ this.state.color1 + \",\" + this.state.color5 + \",\" + this.state.color3+ \")\"\n          }else if(curr < 0.3){\n              gradient = \"radial-gradient(\"+ this.state.color2 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          }else if(curr < 0.5){\n            gradient = \"linear-gradient(45deg,\"+ this.state.color2 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          }else if(curr < .62){\n            gradient = \"linear-gradient(60deg,\"+ this.state.color1 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          }else if(curr < .75){\n              gradient = \"linear-gradient(45deg,\"+ this.state.color1 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          } else{\n              gradient = \"radial-gradient(farthest-side at 60px 40px,\"+ this.state.color3 + \",\" + this.state.color4 + \",\" + this.state.color3+ \")\"\n          }\n          console.log(gradient);\n          console.log(color1); \n          document.getElementById('gradient').style.background = gradient;\n          document.getElementById('color1').style.color = color1;\n          document.getElementById('circle1').style.backgroundColor = color1;\n          document.getElementById('color2').style.color = color2;\n          document.getElementById('circle2').style.backgroundColor = color2;\n          document.getElementById('color3').style.color = color3;\n          document.getElementById('circle3').style.backgroundColor = color3;\n          document.getElementById('color4').style.color = color4;\n          document.getElementById('circle4').style.backgroundColor = color4;\n          document.getElementById('color5').style.color = color5;\n          document.getElementById('circle5').style.backgroundColor = color5;\n        })\n      })\n  }\n\n  getTopTracks(){\n    spotifyApi.getMyTopTracks()\n      .then((response) => {\n        console.log(response.items);\n      }, (onRejected) => {\n        alert(\"gathering tracks failed\");\n      })\n  }\n  searchTrack(query){\n    spotifyApi.searchTracks(query).then(\n      (response) =>{\n     console.log(\"hello\")\n    }, (onRejected) => {\n      alert(\"search failed\");\n    })\n  }\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n  render() {\n    if(this.state.loggedIn){\n      return(\n      <div className=\"App\">\n        <h1>welcome to mood ring</h1>\n        <div className='center'>\n          <p> mood ring creates a color profile of the \n            song that you are currently listening to on spotify. \n          if you want to use mood ring, then start playing a song in the web player or on the app on spotify</p>\n        </div>\n        { this.state.loggedIn &&\n          <button id='now-btn' onClick={() => this.getNowPlaying()}>\n            check your mood\n          </button>\n        }\n        <div>\n            <p> { this.state.nowPlaying.name } </p>\n          </div>\n          <div>\n            <img id='albumsrc' src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n          </div>\n        <div className ='color' id='gradient' > \n        </div>\n\n        <div className =\"colorPalette\">\n        <table>\n          <td>  \n              <span class=\"dot\" id='circle1'></span>\n              <h2> <span id='color1' > {this.state.color1} </span> </h2>\n            </td>\n            <td>  \n              <span class=\"dot\" id='circle2'></span>\n              <h2> <span id='color2' > {this.state.color2} </span> </h2>\n            </td>\n            <td>  \n              <span class=\"dot\" id='circle3'></span>\n              <h2> <span id='color3' > {this.state.color3} </span> </h2>\n            </td>\n            <td>  \n              <span class=\"dot\" id='circle4'></span>\n              <h2> <span id='color4' > {this.state.color4} </span> </h2>\n            </td>\n            <td>  \n              <span class=\"dot\" id='circle5'></span>\n              <h2> <span id='color5' > {this.state.color5} </span> </h2>\n            </td>\n\n          </table>\n        </div>\n      </div>);\n   }else{\n     return(\n      <div className=\"App\">\n        <h1>welcome to mood ring</h1>\n        <div className='center'>\n          <p> mood ring creates a color profile of the song that \n          you are currently listening to on spotify. if you want to use \n          mood ring, then start playing a song in the web player on spotify</p>\n        </div>\n      {!this.state.token && (\n         <a\n         className=\"Button\" id='log-in'\n         href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n           \"%20\"\n         )}&response_type=token&show_dialog=true`}\n       >\n         Login to Spotify\n       </a>\n      )}\n    </div>\n      );\n   }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}